[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Machine learning with tidymodels",
    "section": "",
    "text": "These are the materials for workshops on tidymodels. This workshop provides an introduction to machine learning with R using the tidymodels framework, a collection of packages for modeling and machine learning using tidyverse principles. We will build, evaluate, compare, and tune predictive models. Along the way, we’ll learn about key concepts in machine learning including overfitting, resampling, and feature engineering. Learners will gain knowledge about good predictive modeling practices, as well as hands-on experience using tidymodels packages like parsnip, rsample, recipes, yardstick, tune, and workflows."
  },
  {
    "objectID": "index.html#is-this-workshop-for-me",
    "href": "index.html#is-this-workshop-for-me",
    "title": "Machine learning with tidymodels",
    "section": "Is this workshop for me? ",
    "text": "Is this workshop for me? \nThis course assumes intermediate R knowledge. This workshop is for you if:\n\nYou can use the magrittr pipe %>% and/or native pipe |>\nYou are familiar with functions from dplyr, tidyr, and ggplot2\nYou can read data into R, transform and reshape data, and make a wide variety of graphs\n\nWe expect participants to have some exposure to basic statistical concepts, but NOT intermediate or expert familiarity with modeling or machine learning."
  },
  {
    "objectID": "index.html#preparation",
    "href": "index.html#preparation",
    "title": "Machine learning with tidymodels",
    "section": "Preparation",
    "text": "Preparation\nPlease join the workshop with a computer that has the following installed (all available for free):\n\nA recent version of R, available at https://cran.r-project.org/\nA recent version of RStudio Desktop (RStudio Desktop Open Source License, at least v2022.02), available at https://www.rstudio.com/download\nThe following R packages, which you can install from the R console:\n\n\ninstall.packages(c(\"doParallel\", \"embed\", \"forcats\",\n                   \"nnet\", \"ranger\", \"remotes\", \"rpart\", \n                   \"rpart.plot\", \"stacks\", \"tidymodels\",\n                   \"vetiver\", \"xgboost\"))\n\nremotes::install_github(\"topepo/ongoal\")"
  },
  {
    "objectID": "index.html#slides",
    "href": "index.html#slides",
    "title": "Machine learning with tidymodels",
    "section": "Slides",
    "text": "Slides\n\nDay One\n\n01: Introduction\n02: Your data budget\n03: What makes a model?\n04: Evaluating models\n\n\n\nDay Two\n\n05: Feature engineering\n06: Tuning hyperparameters\n07: Wrapping up"
  },
  {
    "objectID": "index.html#code",
    "href": "index.html#code",
    "title": "Machine learning with tidymodels",
    "section": "Code",
    "text": "Code\nQuarto files for working along are available on GitHub. (Don’t worry if you haven’t used Quarto before; it will feel familiar to R Markdown users.)"
  },
  {
    "objectID": "index.html#past-and-planned-workshops",
    "href": "index.html#past-and-planned-workshops",
    "title": "Machine learning with tidymodels",
    "section": "Past and planned workshops",
    "text": "Past and planned workshops\n\n25-26 July 2022 at rstudio::conf()"
  },
  {
    "objectID": "index.html#acknowledgments",
    "href": "index.html#acknowledgments",
    "title": "Machine learning with tidymodels",
    "section": "Acknowledgments",
    "text": "Acknowledgments\n\nThis website, including the slides, is made with Quarto. Please submit an issue on the GitHub repo for this workshop if you find something that could be fixed or improved."
  },
  {
    "objectID": "index.html#reuse-and-licensing",
    "href": "index.html#reuse-and-licensing",
    "title": "Machine learning with tidymodels",
    "section": "Reuse and licensing",
    "text": "Reuse and licensing\n\nUnless otherwise noted (i.e. not an original creation and reused from another source), these educational materials are licensed under Creative Commons Attribution CC BY-SA 4.0."
  },
  {
    "objectID": "slides/01-introduction.html#workshop-policies",
    "href": "slides/01-introduction.html#workshop-policies",
    "title": "1 - Introduction",
    "section": "Workshop policies",
    "text": "Workshop policies\n\nIdentify the exits closest to you in case of emergency\nPlease review the rstudio::conf code of conduct, which applies to all workshops\nCoC issues can be addressed three ways:\n\nIn person: contact any rstudio::conf staff member or the conference registration desk\nBy email: send a message to conf@rstudio.com\nBy phone: call 844-448-1212\n\nPlease do not photograph people wearing red lanyards\nA chill-out room is available for neurologically diverse attendees on TKTK"
  },
  {
    "objectID": "slides/01-introduction.html#who-are-you",
    "href": "slides/01-introduction.html#who-are-you",
    "title": "1 - Introduction",
    "section": "Who are you?",
    "text": "Who are you?\n\nYou can use the magrittr %>% or base R |> pipe\nYou are familiar with functions from dplyr, tidyr, ggplot2\nYou have exposure to basic statistical concepts\nYou do not need intermediate or expert familiarity with modeling or ML"
  },
  {
    "objectID": "slides/01-introduction.html#who-are-we",
    "href": "slides/01-introduction.html#who-are-we",
    "title": "1 - Introduction",
    "section": "Who are we?",
    "text": "Who are we?\n\n\n\nHannah Frick\nEmil Hvitfeldt\nMax Kuhn\n\n\n\nJulia Silge\nDavid Robinson\nDavis Vaughan"
  },
  {
    "objectID": "slides/01-introduction.html#who-are-we-1",
    "href": "slides/01-introduction.html#who-are-we-1",
    "title": "1 - Introduction",
    "section": "Who are we?",
    "text": "Who are we?\n\n\n\nKelly Bodwin\nMichael Chow\nPritam Dalal\nMatt Dancho\nJon Harmon\n\n\n\nMike Mahoney\nEdgar Ruiz\nAsmae Toumi\nQiushi Yan\n\n\n\n\nMany thanks to Julie Jung, Alison Hill, and Desirée De Leon for their role in creating these materials!"
  },
  {
    "objectID": "slides/01-introduction.html#asking-for-help",
    "href": "slides/01-introduction.html#asking-for-help",
    "title": "1 - Introduction",
    "section": "Asking for help",
    "text": "Asking for help\n\n🟪 “I’m stuck and need help!”\n\n\n🟩 “I finished the exercise”"
  },
  {
    "objectID": "slides/01-introduction.html#plan-for-this-workshop",
    "href": "slides/01-introduction.html#plan-for-this-workshop",
    "title": "1 - Introduction",
    "section": "Plan for this workshop",
    "text": "Plan for this workshop\n\nToday:\n\nYour data budget\nWhat makes a model\nEvaluating models\n\nTomorrow:\n\nFeature engineering\nTuning hyperparameters\nWrapping up!"
  },
  {
    "objectID": "slides/01-introduction.html#section-2",
    "href": "slides/01-introduction.html#section-2",
    "title": "1 - Introduction",
    "section": "",
    "text": "Introduce yourself to your neighbors 👋\n\n Log in to RStudio Cloud here (free):\nbit.ly/tidymodels-workshop"
  },
  {
    "objectID": "slides/01-introduction.html#what-is-machine-learning",
    "href": "slides/01-introduction.html#what-is-machine-learning",
    "title": "1 - Introduction",
    "section": "What is machine learning?",
    "text": "What is machine learning?\n\n\nhttps://xkcd.com/1838/"
  },
  {
    "objectID": "slides/01-introduction.html#what-is-machine-learning-1",
    "href": "slides/01-introduction.html#what-is-machine-learning-1",
    "title": "1 - Introduction",
    "section": "What is machine learning?",
    "text": "What is machine learning?\n\n\nIllustration credit: https://vas3k.com/blog/machine_learning/"
  },
  {
    "objectID": "slides/01-introduction.html#what-is-machine-learning-2",
    "href": "slides/01-introduction.html#what-is-machine-learning-2",
    "title": "1 - Introduction",
    "section": "What is machine learning?",
    "text": "What is machine learning?\n\n\nIllustration credit: https://vas3k.com/blog/machine_learning/"
  },
  {
    "objectID": "slides/01-introduction.html#your-turn",
    "href": "slides/01-introduction.html#your-turn",
    "title": "1 - Introduction",
    "section": "Your turn",
    "text": "Your turn\n\n\nHow are statistics and machine learning related?\nHow are they similar? Different?\n\n\n\n03:00\n\n\n\n\nthe “two cultures”\nmodel first vs. data first\ninference vs. prediction"
  },
  {
    "objectID": "slides/01-introduction.html#what-is-tidymodels",
    "href": "slides/01-introduction.html#what-is-tidymodels",
    "title": "1 - Introduction",
    "section": "What is tidymodels? ",
    "text": "What is tidymodels? \n\nlibrary(tidymodels)\n#> ── Attaching packages ──────────────────────────── tidymodels 0.2.0 ──\n#> ✔ broom        0.8.0          ✔ rsample      1.0.0     \n#> ✔ dials        1.0.0          ✔ tibble       3.1.7     \n#> ✔ dplyr        1.0.9          ✔ tidyr        1.2.0     \n#> ✔ infer        1.0.2          ✔ tune         0.2.0     \n#> ✔ modeldata    0.1.1          ✔ workflows    0.2.6     \n#> ✔ parsnip      1.0.0          ✔ workflowsets 0.2.1     \n#> ✔ purrr        0.3.4          ✔ yardstick    1.0.0     \n#> ✔ recipes      0.2.0.9001\n#> ── Conflicts ─────────────────────────────── tidymodels_conflicts() ──\n#> ✖ purrr::discard() masks scales::discard()\n#> ✖ dplyr::filter()  masks stats::filter()\n#> ✖ dplyr::lag()     masks stats::lag()\n#> ✖ recipes::step()  masks stats::step()\n#> • Learn how to get started at https://www.tidymodels.org/start/"
  },
  {
    "objectID": "slides/01-introduction.html#the-whole-game",
    "href": "slides/01-introduction.html#the-whole-game",
    "title": "1 - Introduction",
    "section": "The whole game",
    "text": "The whole game"
  },
  {
    "objectID": "slides/01-introduction.html#lets-install-some-packages",
    "href": "slides/01-introduction.html#lets-install-some-packages",
    "title": "1 - Introduction",
    "section": "Let’s install some packages",
    "text": "Let’s install some packages\nIf you are using your own laptop instead of RStudio Cloud:\n\ninstall.packages(c(\"doParallel\", \"embed\", \"forcats\",\n                   \"nnet\", \"ranger\", \"remotes\", \"rpart\", \n                   \"rpart.plot\", \"stacks\", \"tidymodels\",\n                   \"vetiver\", \"xgboost\"))\n\nremotes::install_github(\"topepo/ongoal\")\n\n\n\n Or log in to RStudio Cloud:\nbit.ly/tidymodels-workshop\n\n\nhttps://workshops.tidymodels.org"
  },
  {
    "objectID": "slides/02-data-budget.html#data-on-tree-frog-hatching",
    "href": "slides/02-data-budget.html#data-on-tree-frog-hatching",
    "title": "2 - Your data budget",
    "section": "Data on tree frog hatching",
    "text": "Data on tree frog hatching"
  },
  {
    "objectID": "slides/02-data-budget.html#data-on-tree-frog-hatching-1",
    "href": "slides/02-data-budget.html#data-on-tree-frog-hatching-1",
    "title": "2 - Your data budget",
    "section": "Data on tree frog hatching",
    "text": "Data on tree frog hatching\n\nRed-eyed tree frog embryos can hatch earlier than their normal ~7 days if they detect potential predator threat!\nType ?stacks::tree_frogs to learn more about this dataset, including references.\nWe are using a slightly modified version from stacks.\n\n\nlibrary(tidymodels)\n\ndata(\"tree_frogs\", package = \"stacks\")\ntree_frogs <- tree_frogs %>%\n  mutate(t_o_d = factor(t_o_d)) %>%\n  filter(!is.na(latency)) %>%\n  select(-c(clutch, hatched))"
  },
  {
    "objectID": "slides/02-data-budget.html#data-on-tree-frog-hatching-2",
    "href": "slides/02-data-budget.html#data-on-tree-frog-hatching-2",
    "title": "2 - Your data budget",
    "section": "Data on tree frog hatching",
    "text": "Data on tree frog hatching\n\n\n\nN = 572\nA numeric outcome, latency\n4 other variables\n\ntreatment, reflex, and t_o_d are nominal predictors\nage is a numeric predictor"
  },
  {
    "objectID": "slides/02-data-budget.html#data-on-tree-frog-hatching-3",
    "href": "slides/02-data-budget.html#data-on-tree-frog-hatching-3",
    "title": "2 - Your data budget",
    "section": "Data on tree frog hatching",
    "text": "Data on tree frog hatching\n\ntree_frogs\n#> # A tibble: 572 × 5\n#>    treatment  reflex    age t_o_d     latency\n#>    <chr>      <fct>   <dbl> <fct>       <dbl>\n#>  1 control    full   466965 morning        22\n#>  2 control    low    361180 night         360\n#>  3 control    full   401595 afternoon     106\n#>  4 control    mid    357810 night         180\n#>  5 control    full   397440 afternoon      60\n#>  6 gentamicin full   463230 morning        39\n#>  7 control    full   393900 afternoon     214\n#>  8 control    full   469065 morning        50\n#>  9 control    full   400240 afternoon     224\n#> 10 control    full   466160 morning        63\n#> # … with 562 more rows"
  },
  {
    "objectID": "slides/02-data-budget.html#data-splitting-and-spending",
    "href": "slides/02-data-budget.html#data-splitting-and-spending",
    "title": "2 - Your data budget",
    "section": "Data splitting and spending",
    "text": "Data splitting and spending\nFor machine learning, we typically split data into training and test sets:\n\n\nThe training set is used to estimate model parameters.\nThe test set is used to find an independent assessment of model performance.\n\n\n\nDo not 🚫 use the test set during training."
  },
  {
    "objectID": "slides/02-data-budget.html#data-splitting-and-spending-1",
    "href": "slides/02-data-budget.html#data-splitting-and-spending-1",
    "title": "2 - Your data budget",
    "section": "Data splitting and spending",
    "text": "Data splitting and spending"
  },
  {
    "objectID": "slides/02-data-budget.html#data-splitting-and-spending-2",
    "href": "slides/02-data-budget.html#data-splitting-and-spending-2",
    "title": "2 - Your data budget",
    "section": "Data splitting and spending",
    "text": "Data splitting and spending\n\nSpending too much data in training prevents us from computing a good assessment of predictive performance.\nSpending too much data in testing prevents us from computing a good estimate of model parameters."
  },
  {
    "objectID": "slides/02-data-budget.html#your-turn",
    "href": "slides/02-data-budget.html#your-turn",
    "title": "2 - Your data budget",
    "section": "Your turn",
    "text": "Your turn\n\nWhen is a good time to split your data?\n\n\n\n03:00"
  },
  {
    "objectID": "slides/02-data-budget.html#data-splitting-and-spending-3",
    "href": "slides/02-data-budget.html#data-splitting-and-spending-3",
    "title": "2 - Your data budget",
    "section": "Data splitting and spending ",
    "text": "Data splitting and spending \n\nset.seed(123)\nfrog_split <- initial_split(tree_frogs, strata = latency)\nfrog_split\n#> <Training/Testing/Total>\n#> <428/144/572>"
  },
  {
    "objectID": "slides/02-data-budget.html#data-splitting-and-spending-4",
    "href": "slides/02-data-budget.html#data-splitting-and-spending-4",
    "title": "2 - Your data budget",
    "section": "Data splitting and spending ",
    "text": "Data splitting and spending \n\nfrog_train <- training(frog_split)\nfrog_test <- testing(frog_split)"
  },
  {
    "objectID": "slides/02-data-budget.html#data-splitting-and-spending-5",
    "href": "slides/02-data-budget.html#data-splitting-and-spending-5",
    "title": "2 - Your data budget",
    "section": "Data splitting and spending ",
    "text": "Data splitting and spending \n\nfrog_train\n#> # A tibble: 428 × 5\n#>    treatment  reflex    age t_o_d     latency\n#>    <chr>      <fct>   <dbl> <fct>       <dbl>\n#>  1 control    full   467950 morning        33\n#>  2 control    full   464870 morning        19\n#>  3 control    full   464610 morning         2\n#>  4 control    full   469650 morning        39\n#>  5 control    full   467600 morning        42\n#>  6 control    full   410460 afternoon      20\n#>  7 control    full   427685 night          31\n#>  8 control    full   468530 morning        21\n#>  9 gentamicin full   465800 morning        30\n#> 10 control    full   393475 afternoon      43\n#> # … with 418 more rows"
  },
  {
    "objectID": "slides/02-data-budget.html#data-splitting-and-spending-6",
    "href": "slides/02-data-budget.html#data-splitting-and-spending-6",
    "title": "2 - Your data budget",
    "section": "Data splitting and spending ",
    "text": "Data splitting and spending \n\nfrog_test\n#> # A tibble: 144 × 5\n#>    treatment  reflex    age t_o_d     latency\n#>    <chr>      <fct>   <dbl> <fct>       <dbl>\n#>  1 control    full   466965 morning        22\n#>  2 control    low    361180 night         360\n#>  3 control    full   401595 afternoon     106\n#>  4 control    mid    357810 night         180\n#>  5 gentamicin full   463230 morning        39\n#>  6 control    full   469065 morning        50\n#>  7 control    full   466160 morning        63\n#>  8 control    full   465800 morning        25\n#>  9 control    full   463800 morning        48\n#> 10 control    full   392680 afternoon     126\n#> # … with 134 more rows"
  },
  {
    "objectID": "slides/02-data-budget.html#your-turn-1",
    "href": "slides/02-data-budget.html#your-turn-1",
    "title": "2 - Your data budget",
    "section": "Your turn",
    "text": "Your turn\n\nSplit your data so 20% is held out for the test set.\nTry out different values in set.seed() to see how the results change.\n\n\n\n05:00"
  },
  {
    "objectID": "slides/02-data-budget.html#data-splitting-and-spending-7",
    "href": "slides/02-data-budget.html#data-splitting-and-spending-7",
    "title": "2 - Your data budget",
    "section": "Data splitting and spending ",
    "text": "Data splitting and spending \n\nset.seed(123)\nfrog_split <- initial_split(tree_frogs, prop = 0.8, strata = latency)\nfrog_train <- training(frog_split)\nfrog_test <- testing(frog_split)\n\nnrow(frog_train)\n#> [1] 456\nnrow(frog_test)\n#> [1] 116"
  },
  {
    "objectID": "slides/02-data-budget.html#section-3",
    "href": "slides/02-data-budget.html#section-3",
    "title": "2 - Your data budget",
    "section": "",
    "text": "ggplot(frog_train, aes(latency)) +\n  geom_histogram(bins = 20)\n\n\n\nRemember how we used strata = latency?"
  },
  {
    "objectID": "slides/02-data-budget.html#section-4",
    "href": "slides/02-data-budget.html#section-4",
    "title": "2 - Your data budget",
    "section": "",
    "text": "quartiles <- quantile(frog_train$latency, probs = c(1:3)/4)\nggplot(frog_train, aes(latency)) +\n  geom_histogram(bins = 20) +\n  geom_vline(xintercept = quartiles, color = train_color, \n             size = 1.5, lty = 2)\n\n\n\nStratification often helps, with very little downside"
  },
  {
    "objectID": "slides/02-data-budget.html#section-5",
    "href": "slides/02-data-budget.html#section-5",
    "title": "2 - Your data budget",
    "section": "",
    "text": "ggplot(frog_train, aes(latency, treatment, fill = treatment)) +\n  geom_boxplot(alpha = 0.5, show.legend = FALSE)"
  },
  {
    "objectID": "slides/02-data-budget.html#section-6",
    "href": "slides/02-data-budget.html#section-6",
    "title": "2 - Your data budget",
    "section": "",
    "text": "frog_train %>%\n  ggplot(aes(latency, reflex, fill = reflex)) +\n  geom_boxplot(alpha = 0.3, show.legend = FALSE)"
  },
  {
    "objectID": "slides/02-data-budget.html#section-7",
    "href": "slides/02-data-budget.html#section-7",
    "title": "2 - Your data budget",
    "section": "",
    "text": "ggplot(frog_train, aes(reflex, age)) +\n  stat_summary_2d(aes(z = latency), \n                  alpha = 0.7, binwidth = c(1, 5e3)) +\n  scale_fill_viridis_c() +\n  labs(fill = \"mean latency\")"
  },
  {
    "objectID": "slides/02-data-budget.html#your-turn-2",
    "href": "slides/02-data-budget.html#your-turn-2",
    "title": "2 - Your data budget",
    "section": "Your turn",
    "text": "Your turn\n\nExplore the frog_train data on your own!\n\n\n\n\n05:00\n\n\n\n\nMake a plot or summary and then share with neighbor\n\n\n\nhttps://workshops.tidymodels.org"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#your-turn",
    "href": "slides/03-what-makes-a-model.html#your-turn",
    "title": "3 - What makes a model?",
    "section": "Your turn",
    "text": "Your turn\n\nHow do you fit a linear model in R?\nHow many different ways can you think of?\n\n\n\n03:00\n\n\n\n\n\nlm for generalized linear model\nglmnet for regularized regression\nkeras for regression using TensorFlow\nstan for Bayesian regression\nspark for large data sets"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#to-specify-a-model",
    "href": "slides/03-what-makes-a-model.html#to-specify-a-model",
    "title": "3 - What makes a model?",
    "section": "To specify a model ",
    "text": "To specify a model \n\n\n\n\nChoose a model\nSpecify an engine\nSet the mode"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#to-specify-a-model-1",
    "href": "slides/03-what-makes-a-model.html#to-specify-a-model-1",
    "title": "3 - What makes a model?",
    "section": "To specify a model ",
    "text": "To specify a model \n\n\n\n\nlinear_reg()\n#> Linear Regression Model Specification (regression)\n#> \n#> Computational engine: lm"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#to-specify-a-model-2",
    "href": "slides/03-what-makes-a-model.html#to-specify-a-model-2",
    "title": "3 - What makes a model?",
    "section": "To specify a model ",
    "text": "To specify a model \n\n\n\nChoose a model\nSpecify an engine\nSet the mode"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#to-specify-a-model-3",
    "href": "slides/03-what-makes-a-model.html#to-specify-a-model-3",
    "title": "3 - What makes a model?",
    "section": "To specify a model ",
    "text": "To specify a model \n\nlinear_reg() %>%\n  set_engine(\"glmnet\")\n#> Linear Regression Model Specification (regression)\n#> \n#> Computational engine: glmnet"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#to-specify-a-model-4",
    "href": "slides/03-what-makes-a-model.html#to-specify-a-model-4",
    "title": "3 - What makes a model?",
    "section": "To specify a model ",
    "text": "To specify a model \n\nlinear_reg() %>%\n  set_engine(\"stan\")\n#> Linear Regression Model Specification (regression)\n#> \n#> Computational engine: stan"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#to-specify-a-model-5",
    "href": "slides/03-what-makes-a-model.html#to-specify-a-model-5",
    "title": "3 - What makes a model?",
    "section": "To specify a model ",
    "text": "To specify a model \n\n\n\nChoose a model\nSpecify an engine\nSet the mode"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#to-specify-a-model-6",
    "href": "slides/03-what-makes-a-model.html#to-specify-a-model-6",
    "title": "3 - What makes a model?",
    "section": "To specify a model ",
    "text": "To specify a model \n\ndecision_tree()\n#> Decision Tree Model Specification (unknown)\n#> \n#> Computational engine: rpart"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#to-specify-a-model-7",
    "href": "slides/03-what-makes-a-model.html#to-specify-a-model-7",
    "title": "3 - What makes a model?",
    "section": "To specify a model ",
    "text": "To specify a model \n\ndecision_tree() %>% \n  set_mode(\"regression\")\n#> Decision Tree Model Specification (regression)\n#> \n#> Computational engine: rpart\n\n\n\n\nAll available models are listed at https://www.tidymodels.org/find/parsnip/"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#to-specify-a-model-8",
    "href": "slides/03-what-makes-a-model.html#to-specify-a-model-8",
    "title": "3 - What makes a model?",
    "section": "To specify a model ",
    "text": "To specify a model \n\n\n\nChoose a model\nSpecify an engine\nSet the mode"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#your-turn-1",
    "href": "slides/03-what-makes-a-model.html#your-turn-1",
    "title": "3 - What makes a model?",
    "section": "Your turn",
    "text": "Your turn\n\nRun the tree_spec chunk in your .qmd.\nEdit this code so it creates a different model.\n\n\n\n05:00\n\n\n\n\n\nAll available models are listed at https://www.tidymodels.org/find/parsnip/"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#all-models-are-wrong-but",
    "href": "slides/03-what-makes-a-model.html#all-models-are-wrong-but",
    "title": "3 - What makes a model?",
    "section": "All models are wrong but…",
    "text": "All models are wrong but…"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#all-models-are-wrong-but-1",
    "href": "slides/03-what-makes-a-model.html#all-models-are-wrong-but-1",
    "title": "3 - What makes a model?",
    "section": "All models are wrong but…",
    "text": "All models are wrong but…"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#all-models-are-wrong-but-2",
    "href": "slides/03-what-makes-a-model.html#all-models-are-wrong-but-2",
    "title": "3 - What makes a model?",
    "section": "All models are wrong but…",
    "text": "All models are wrong but…\n\n\n\n\n\n\n\n\nLinear regression model\n\nOrdinary least squares (OLS)\nOutcome modeled as linear combination of predictors"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#why-a-workflow",
    "href": "slides/03-what-makes-a-model.html#why-a-workflow",
    "title": "3 - What makes a model?",
    "section": "Why a workflow()? ",
    "text": "Why a workflow()? \n\n\nWorkflows handle new data better than model.matrix() in terms of new factor levels\n\n\n\n\nYou can use other preprocessors besides formulas (more on feature engineering tomorrow!)\n\n\n\n\nThey can help organize your work when working with multiple models\n\n\n\n\nMost importantly, a workflow captures the entire modeling process: fit() and predict() apply to the preprocessing steps in addition to the actual model fit"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#a-model-workflow-1",
    "href": "slides/03-what-makes-a-model.html#a-model-workflow-1",
    "title": "3 - What makes a model?",
    "section": "A model workflow  ",
    "text": "A model workflow  \n\ntree_spec <-\n  decision_tree() %>% \n  set_mode(\"regression\")\n\ntree_spec %>% \n  fit(latency ~ ., data = frog_train) \n#> parsnip model object\n#> \n#> n= 456 \n#> \n#> node), split, n, deviance, yval\n#>       * denotes terminal node\n#> \n#>  1) root 456 2197966.00  92.90351  \n#>    2) age>=427505 256  252347.40  60.89844  \n#>      4) treatment=control 131   91424.06  48.42748 *\n#>      5) treatment=gentamicin 125  119197.90  73.96800 *\n#>    3) age< 427505 200 1347741.00 133.87000  \n#>      6) treatment=control 140  986790.70 118.25710  \n#>       12) reflex=mid,full 129  754363.70 111.56590 *\n#>       13) reflex=low 11  158918.20 196.72730 *\n#>      7) treatment=gentamicin 60  247194.60 170.30000  \n#>       14) age< 403007.5 30  102190.20 147.83330  \n#>         28) age>=394557.5 22   53953.86 129.77270 *\n#>         29) age< 394557.5 8   21326.00 197.50000 *\n#>       15) age>=403007.5 30  114719.40 192.76670 *"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#a-model-workflow-2",
    "href": "slides/03-what-makes-a-model.html#a-model-workflow-2",
    "title": "3 - What makes a model?",
    "section": "A model workflow  ",
    "text": "A model workflow  \n\ntree_spec <-\n  decision_tree() %>% \n  set_mode(\"regression\")\n\nworkflow() %>%\n  add_model(tree_spec) %>%\n  add_formula(latency ~ .) %>%\n  fit(data = frog_train) \n#> ══ Workflow [trained] ════════════════════════════════════════════════\n#> Preprocessor: Formula\n#> Model: decision_tree()\n#> \n#> ── Preprocessor ──────────────────────────────────────────────────────\n#> latency ~ .\n#> \n#> ── Model ─────────────────────────────────────────────────────────────\n#> n= 456 \n#> \n#> node), split, n, deviance, yval\n#>       * denotes terminal node\n#> \n#>  1) root 456 2197966.00  92.90351  \n#>    2) age>=427505 256  252347.40  60.89844  \n#>      4) treatment=control 131   91424.06  48.42748 *\n#>      5) treatment=gentamicin 125  119197.90  73.96800 *\n#>    3) age< 427505 200 1347741.00 133.87000  \n#>      6) treatment=control 140  986790.70 118.25710  \n#>       12) reflex=mid,full 129  754363.70 111.56590 *\n#>       13) reflex=low 11  158918.20 196.72730 *\n#>      7) treatment=gentamicin 60  247194.60 170.30000  \n#>       14) age< 403007.5 30  102190.20 147.83330  \n#>         28) age>=394557.5 22   53953.86 129.77270 *\n#>         29) age< 394557.5 8   21326.00 197.50000 *\n#>       15) age>=403007.5 30  114719.40 192.76670 *"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#a-model-workflow-3",
    "href": "slides/03-what-makes-a-model.html#a-model-workflow-3",
    "title": "3 - What makes a model?",
    "section": "A model workflow  ",
    "text": "A model workflow  \n\ntree_spec <-\n  decision_tree() %>% \n  set_mode(\"regression\")\n\nworkflow() %>%\n  add_model(tree_spec) %>%\n  add_variables(outcomes = latency, predictors = everything()) %>%\n  fit(data = frog_train) \n#> ══ Workflow [trained] ════════════════════════════════════════════════\n#> Preprocessor: Variables\n#> Model: decision_tree()\n#> \n#> ── Preprocessor ──────────────────────────────────────────────────────\n#> Outcomes: latency\n#> Predictors: everything()\n#> \n#> ── Model ─────────────────────────────────────────────────────────────\n#> n= 456 \n#> \n#> node), split, n, deviance, yval\n#>       * denotes terminal node\n#> \n#>  1) root 456 2197966.00  92.90351  \n#>    2) age>=427505 256  252347.40  60.89844  \n#>      4) treatment=control 131   91424.06  48.42748 *\n#>      5) treatment=gentamicin 125  119197.90  73.96800 *\n#>    3) age< 427505 200 1347741.00 133.87000  \n#>      6) treatment=control 140  986790.70 118.25710  \n#>       12) reflex=mid,full 129  754363.70 111.56590 *\n#>       13) reflex=low 11  158918.20 196.72730 *\n#>      7) treatment=gentamicin 60  247194.60 170.30000  \n#>       14) age< 403007.5 30  102190.20 147.83330  \n#>         28) age>=394557.5 22   53953.86 129.77270 *\n#>         29) age< 394557.5 8   21326.00 197.50000 *\n#>       15) age>=403007.5 30  114719.40 192.76670 *"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#a-model-workflow-4",
    "href": "slides/03-what-makes-a-model.html#a-model-workflow-4",
    "title": "3 - What makes a model?",
    "section": "A model workflow  ",
    "text": "A model workflow  \n\ntree_spec <-\n  decision_tree() %>% \n  set_mode(\"regression\")\n\nworkflow(latency ~ ., tree_spec) %>% \n  fit(data = frog_train) \n#> ══ Workflow [trained] ════════════════════════════════════════════════\n#> Preprocessor: Formula\n#> Model: decision_tree()\n#> \n#> ── Preprocessor ──────────────────────────────────────────────────────\n#> latency ~ .\n#> \n#> ── Model ─────────────────────────────────────────────────────────────\n#> n= 456 \n#> \n#> node), split, n, deviance, yval\n#>       * denotes terminal node\n#> \n#>  1) root 456 2197966.00  92.90351  \n#>    2) age>=427505 256  252347.40  60.89844  \n#>      4) treatment=control 131   91424.06  48.42748 *\n#>      5) treatment=gentamicin 125  119197.90  73.96800 *\n#>    3) age< 427505 200 1347741.00 133.87000  \n#>      6) treatment=control 140  986790.70 118.25710  \n#>       12) reflex=mid,full 129  754363.70 111.56590 *\n#>       13) reflex=low 11  158918.20 196.72730 *\n#>      7) treatment=gentamicin 60  247194.60 170.30000  \n#>       14) age< 403007.5 30  102190.20 147.83330  \n#>         28) age>=394557.5 22   53953.86 129.77270 *\n#>         29) age< 394557.5 8   21326.00 197.50000 *\n#>       15) age>=403007.5 30  114719.40 192.76670 *"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#your-turn-2",
    "href": "slides/03-what-makes-a-model.html#your-turn-2",
    "title": "3 - What makes a model?",
    "section": "Your turn",
    "text": "Your turn\n\nRun the tree_wflow chunk in your .qmd.\nEdit this code so it:\n\ncreates a different model\nuses one of the other workflow() interfaces\n\n\n\n\n05:00"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#predict-with-your-model",
    "href": "slides/03-what-makes-a-model.html#predict-with-your-model",
    "title": "3 - What makes a model?",
    "section": "Predict with your model  ",
    "text": "Predict with your model  \nHow do you use your new tree_fit model?\n\ntree_spec <-\n  decision_tree() %>% \n  set_mode(\"regression\")\n\ntree_fit <-\n  workflow(latency ~ ., tree_spec) %>% \n  fit(data = frog_train)"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#your-turn-3",
    "href": "slides/03-what-makes-a-model.html#your-turn-3",
    "title": "3 - What makes a model?",
    "section": "Your turn",
    "text": "Your turn\n\nRun:\npredict(tree_fit, new_data = frog_test)\nWhat do you get?\n\n\n\n03:00"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#your-turn-4",
    "href": "slides/03-what-makes-a-model.html#your-turn-4",
    "title": "3 - What makes a model?",
    "section": "Your turn",
    "text": "Your turn\n\nRun:\naugment(tree_fit, new_data = frog_test)\nWhat do you get?\n\n\n\n03:00"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#understand-your-model",
    "href": "slides/03-what-makes-a-model.html#understand-your-model",
    "title": "3 - What makes a model?",
    "section": "Understand your model  ",
    "text": "Understand your model  \nHow do you understand your new tree_fit model?\n\nYou can use your fitted workflow for model and/or prediction explanations:\n\n\n\noverall variable importance, such as with the vip package\n\n\n\n\nflexible model explainers, such as with the DALEXtra package\n\n\n\nLearn more at https://www.tmwr.org/explain.html"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#understand-your-model-1",
    "href": "slides/03-what-makes-a-model.html#understand-your-model-1",
    "title": "3 - What makes a model?",
    "section": "Understand your model  ",
    "text": "Understand your model  \nHow do you understand your new tree_fit model?"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#understand-your-model-2",
    "href": "slides/03-what-makes-a-model.html#understand-your-model-2",
    "title": "3 - What makes a model?",
    "section": "Understand your model  ",
    "text": "Understand your model  \nHow do you understand your new tree_fit model?\n\nlibrary(rpart.plot)\ntree_fit %>%\n  extract_fit_engine() %>%\n  rpart.plot()\n\nYou can extract_*() several components of your fitted workflow."
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#your-turn-5",
    "href": "slides/03-what-makes-a-model.html#your-turn-5",
    "title": "3 - What makes a model?",
    "section": "Your turn",
    "text": "Your turn\n\nRead the documentation for object extraction.\nTry out some extraction methods on your trained workflow.\n⚠️ Never predict() with any extracted components!\n\n\n\n05:00"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#deploy-your-model",
    "href": "slides/03-what-makes-a-model.html#deploy-your-model",
    "title": "3 - What makes a model?",
    "section": "Deploy your model ",
    "text": "Deploy your model \nHow do you use your new tree_fit model in production?\n\nlibrary(vetiver)\nv <- vetiver_model(tree_fit, \"frog_hatching\")\nv\n#> \n#> ── frog_hatching ─ <butchered_workflow> model for deployment \n#> A rpart regression modeling workflow using 4 features\n\nLearn more at https://vetiver.rstudio.com"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#deploy-your-model-1",
    "href": "slides/03-what-makes-a-model.html#deploy-your-model-1",
    "title": "3 - What makes a model?",
    "section": "Deploy your model ",
    "text": "Deploy your model \nHow do you use your new model tree_fit in production?\n\nlibrary(plumber)\npr() %>%\n  vetiver_api(v)\n#> # Plumber router with 2 endpoints, 4 filters, and 1 sub-router.\n#> # Use `pr_run()` on this object to start the API.\n#> ├──[queryString]\n#> ├──[body]\n#> ├──[cookieParser]\n#> ├──[sharedSecret]\n#> ├──/logo\n#> │  │ # Plumber static router serving from directory: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/vetiver\n#> ├──/ping (GET)\n#> └──/predict (POST)\n\nLearn more at https://vetiver.rstudio.com"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#your-turn-6",
    "href": "slides/03-what-makes-a-model.html#your-turn-6",
    "title": "3 - What makes a model?",
    "section": "Your turn",
    "text": "Your turn\n\nRun the vetiver chunk in your .qmd.\nCheck out the automated visual documentation.\n\n\n\n05:00\n\n\n\n\n\nhttps://workshops.tidymodels.org"
  },
  {
    "objectID": "slides/04-evaluating-models.html#metrics-for-model-performance",
    "href": "slides/04-evaluating-models.html#metrics-for-model-performance",
    "title": "4 - Evaluating models",
    "section": "Metrics for model performance ",
    "text": "Metrics for model performance \n\n\n\n\naugment(tree_fit, new_data = frog_test) %>%\n  metrics(latency, .pred)\n#> # A tibble: 3 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard      59.2  \n#> 2 rsq     standard       0.380\n#> 3 mae     standard      40.2\n\n\n\nRMSE: difference between the predicted and observed values ⬇️\n\\(R^2\\): squared correlation between the predicted and observed values ⬆️\nMAE: similar to RMSE, but mean absolute error ⬇️"
  },
  {
    "objectID": "slides/04-evaluating-models.html#metrics-for-model-performance-1",
    "href": "slides/04-evaluating-models.html#metrics-for-model-performance-1",
    "title": "4 - Evaluating models",
    "section": "Metrics for model performance ",
    "text": "Metrics for model performance \n\naugment(tree_fit, new_data = frog_test) %>%\n  rmse(latency, .pred)\n#> # A tibble: 1 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard        59.2"
  },
  {
    "objectID": "slides/04-evaluating-models.html#metrics-for-model-performance-2",
    "href": "slides/04-evaluating-models.html#metrics-for-model-performance-2",
    "title": "4 - Evaluating models",
    "section": "Metrics for model performance ",
    "text": "Metrics for model performance \n\naugment(tree_fit, new_data = frog_test) %>%\n  group_by(reflex) %>%\n  rmse(latency, .pred)\n#> # A tibble: 3 × 4\n#>   reflex .metric .estimator .estimate\n#>   <fct>  <chr>   <chr>          <dbl>\n#> 1 low    rmse    standard        94.3\n#> 2 mid    rmse    standard       101. \n#> 3 full   rmse    standard        51.2"
  },
  {
    "objectID": "slides/04-evaluating-models.html#metrics-for-model-performance-3",
    "href": "slides/04-evaluating-models.html#metrics-for-model-performance-3",
    "title": "4 - Evaluating models",
    "section": "Metrics for model performance ",
    "text": "Metrics for model performance \n\nfrog_metrics <- metric_set(rmse, msd)\naugment(tree_fit, new_data = frog_test) %>%\n  frog_metrics(latency, .pred)\n#> # A tibble: 2 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard      59.2  \n#> 2 msd     standard      -0.908"
  },
  {
    "objectID": "slides/04-evaluating-models.html#dangers-of-overfitting-1",
    "href": "slides/04-evaluating-models.html#dangers-of-overfitting-1",
    "title": "4 - Evaluating models",
    "section": "Dangers of overfitting ⚠️",
    "text": "Dangers of overfitting ⚠️"
  },
  {
    "objectID": "slides/04-evaluating-models.html#dangers-of-overfitting-2",
    "href": "slides/04-evaluating-models.html#dangers-of-overfitting-2",
    "title": "4 - Evaluating models",
    "section": "Dangers of overfitting ⚠️",
    "text": "Dangers of overfitting ⚠️"
  },
  {
    "objectID": "slides/04-evaluating-models.html#dangers-of-overfitting-3",
    "href": "slides/04-evaluating-models.html#dangers-of-overfitting-3",
    "title": "4 - Evaluating models",
    "section": "Dangers of overfitting ⚠️ ",
    "text": "Dangers of overfitting ⚠️ \n\ntree_fit %>%\n  augment(frog_train)\n#> # A tibble: 456 × 6\n#>    treatment  reflex    age t_o_d     latency .pred\n#>    <chr>      <fct>   <dbl> <fct>       <dbl> <dbl>\n#>  1 control    full   467950 morning        33  39.8\n#>  2 control    full   464870 morning        19  66.7\n#>  3 control    full   464610 morning         2  66.7\n#>  4 control    full   469650 morning        39  39.8\n#>  5 control    full   467600 morning        42  39.8\n#>  6 control    full   410460 afternoon      20  59.8\n#>  7 control    full   427685 night          31  83.1\n#>  8 control    full   468530 morning        21  39.8\n#>  9 gentamicin full   465800 morning        30  64.6\n#> 10 control    full   393475 afternoon      43 174. \n#> # … with 446 more rows\n\nWe call this “resubstition” or “repredicting the training set”"
  },
  {
    "objectID": "slides/04-evaluating-models.html#dangers-of-overfitting-4",
    "href": "slides/04-evaluating-models.html#dangers-of-overfitting-4",
    "title": "4 - Evaluating models",
    "section": "Dangers of overfitting ⚠️ ",
    "text": "Dangers of overfitting ⚠️ \n\ntree_fit %>%\n  augment(frog_train) %>%\n  rmse(latency, .pred)\n#> # A tibble: 1 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard        49.4\n\nWe call this a “resubstition metric”"
  },
  {
    "objectID": "slides/04-evaluating-models.html#dangers-of-overfitting-5",
    "href": "slides/04-evaluating-models.html#dangers-of-overfitting-5",
    "title": "4 - Evaluating models",
    "section": "Dangers of overfitting ⚠️ ",
    "text": "Dangers of overfitting ⚠️ \n\n\n\ntree_fit %>%\n  augment(frog_train) %>%\n  rmse(latency, .pred)\n#> # A tibble: 1 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard        49.4"
  },
  {
    "objectID": "slides/04-evaluating-models.html#dangers-of-overfitting-6",
    "href": "slides/04-evaluating-models.html#dangers-of-overfitting-6",
    "title": "4 - Evaluating models",
    "section": "Dangers of overfitting ⚠️ ",
    "text": "Dangers of overfitting ⚠️ \n\n\n\ntree_fit %>%\n  augment(frog_train) %>%\n  rmse(latency, .pred)\n#> # A tibble: 1 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard        49.4\n\n\n\ntree_fit %>%\n  augment(frog_test) %>%\n  rmse(latency, .pred)\n#> # A tibble: 1 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard        59.2"
  },
  {
    "objectID": "slides/04-evaluating-models.html#dangers-of-overfitting-7",
    "href": "slides/04-evaluating-models.html#dangers-of-overfitting-7",
    "title": "4 - Evaluating models",
    "section": "Dangers of overfitting ⚠️ ",
    "text": "Dangers of overfitting ⚠️ \n\n\n\n\n\ntree_fit %>%\n  augment(frog_test) %>%\n  rmse(latency, .pred)\n#> # A tibble: 1 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard        59.2\n\n\n\n\n⚠️ Remember that we’re demonstrating overfitting\n\n\n⚠️ Don’t use the test set until the end of your modeling analysis"
  },
  {
    "objectID": "slides/04-evaluating-models.html#your-turn",
    "href": "slides/04-evaluating-models.html#your-turn",
    "title": "4 - Evaluating models",
    "section": "Your turn",
    "text": "Your turn\n\nUse augment() and metrics() to compute regression metrics.\nCompute the metrics for both training and testing data.\nNotice the evidence of overfitting! ⚠️\n\n\n\n05:00"
  },
  {
    "objectID": "slides/04-evaluating-models.html#dangers-of-overfitting-8",
    "href": "slides/04-evaluating-models.html#dangers-of-overfitting-8",
    "title": "4 - Evaluating models",
    "section": "Dangers of overfitting ⚠️ ",
    "text": "Dangers of overfitting ⚠️ \n\n\n\ntree_fit %>%\n  augment(frog_train) %>%\n  metrics(latency, .pred)\n#> # A tibble: 3 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard      49.4  \n#> 2 rsq     standard       0.494\n#> 3 mae     standard      33.4\n\n\n\ntree_fit %>%\n  augment(frog_test) %>%\n  metrics(latency, .pred)\n#> # A tibble: 3 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard      59.2  \n#> 2 rsq     standard       0.380\n#> 3 mae     standard      40.2\n\n\n\n\nWhat if we want to compare more models?\n\n\nAnd/or more model configurations?\n\n\nAnd we want to understand if these are important differences?"
  },
  {
    "objectID": "slides/04-evaluating-models.html#cross-validation",
    "href": "slides/04-evaluating-models.html#cross-validation",
    "title": "4 - Evaluating models",
    "section": "Cross-validation",
    "text": "Cross-validation"
  },
  {
    "objectID": "slides/04-evaluating-models.html#cross-validation-1",
    "href": "slides/04-evaluating-models.html#cross-validation-1",
    "title": "4 - Evaluating models",
    "section": "Cross-validation",
    "text": "Cross-validation"
  },
  {
    "objectID": "slides/04-evaluating-models.html#your-turn-1",
    "href": "slides/04-evaluating-models.html#your-turn-1",
    "title": "4 - Evaluating models",
    "section": "Your turn",
    "text": "Your turn\n\nIf we use 10 folds, what percent of the training data\n\nends up in analysis\nends up in assessment\n\nfor each fold?\n\n\n\n\n03:00"
  },
  {
    "objectID": "slides/04-evaluating-models.html#resampling",
    "href": "slides/04-evaluating-models.html#resampling",
    "title": "4 - Evaluating models",
    "section": "Resampling ",
    "text": "Resampling \n\nvfold_cv(frog_train) ## v = 10 is default\n#> #  10-fold cross-validation \n#> # A tibble: 10 × 2\n#>    splits           id    \n#>    <list>           <chr> \n#>  1 <split [410/46]> Fold01\n#>  2 <split [410/46]> Fold02\n#>  3 <split [410/46]> Fold03\n#>  4 <split [410/46]> Fold04\n#>  5 <split [410/46]> Fold05\n#>  6 <split [410/46]> Fold06\n#>  7 <split [411/45]> Fold07\n#>  8 <split [411/45]> Fold08\n#>  9 <split [411/45]> Fold09\n#> 10 <split [411/45]> Fold10"
  },
  {
    "objectID": "slides/04-evaluating-models.html#resampling-1",
    "href": "slides/04-evaluating-models.html#resampling-1",
    "title": "4 - Evaluating models",
    "section": "Resampling ",
    "text": "Resampling \n\nvfold_cv(frog_train, v = 5)\n#> #  5-fold cross-validation \n#> # A tibble: 5 × 2\n#>   splits           id   \n#>   <list>           <chr>\n#> 1 <split [364/92]> Fold1\n#> 2 <split [365/91]> Fold2\n#> 3 <split [365/91]> Fold3\n#> 4 <split [365/91]> Fold4\n#> 5 <split [365/91]> Fold5"
  },
  {
    "objectID": "slides/04-evaluating-models.html#resampling-2",
    "href": "slides/04-evaluating-models.html#resampling-2",
    "title": "4 - Evaluating models",
    "section": "Resampling ",
    "text": "Resampling \nWhat is in this?\n\nfrog_folds <- vfold_cv(frog_train, v = 10)\nfrog_folds$splits[1:3]\n#> [[1]]\n#> <Analysis/Assess/Total>\n#> <410/46/456>\n#> \n#> [[2]]\n#> <Analysis/Assess/Total>\n#> <410/46/456>\n#> \n#> [[3]]\n#> <Analysis/Assess/Total>\n#> <410/46/456>"
  },
  {
    "objectID": "slides/04-evaluating-models.html#bootstrapping",
    "href": "slides/04-evaluating-models.html#bootstrapping",
    "title": "4 - Evaluating models",
    "section": "Bootstrapping",
    "text": "Bootstrapping"
  },
  {
    "objectID": "slides/04-evaluating-models.html#resampling-3",
    "href": "slides/04-evaluating-models.html#resampling-3",
    "title": "4 - Evaluating models",
    "section": "Resampling ",
    "text": "Resampling \n\nbootstraps(frog_train)\n#> # Bootstrap sampling \n#> # A tibble: 25 × 2\n#>    splits            id         \n#>    <list>            <chr>      \n#>  1 <split [456/159]> Bootstrap01\n#>  2 <split [456/168]> Bootstrap02\n#>  3 <split [456/175]> Bootstrap03\n#>  4 <split [456/176]> Bootstrap04\n#>  5 <split [456/162]> Bootstrap05\n#>  6 <split [456/169]> Bootstrap06\n#>  7 <split [456/161]> Bootstrap07\n#>  8 <split [456/169]> Bootstrap08\n#>  9 <split [456/177]> Bootstrap09\n#> 10 <split [456/174]> Bootstrap10\n#> # … with 15 more rows"
  },
  {
    "objectID": "slides/04-evaluating-models.html#your-turn-2",
    "href": "slides/04-evaluating-models.html#your-turn-2",
    "title": "4 - Evaluating models",
    "section": "Your turn",
    "text": "Your turn\n\nCreate:\n\ncross-validation folds with stratification\nbootstrap folds (change times from the default)\nvalidation resample\n\n\n\n\n05:00"
  },
  {
    "objectID": "slides/04-evaluating-models.html#resampling-4",
    "href": "slides/04-evaluating-models.html#resampling-4",
    "title": "4 - Evaluating models",
    "section": "Resampling ",
    "text": "Resampling \n\nvfold_cv(frog_train, strata = latency)\n#> #  10-fold cross-validation using stratification \n#> # A tibble: 10 × 2\n#>    splits           id    \n#>    <list>           <chr> \n#>  1 <split [408/48]> Fold01\n#>  2 <split [408/48]> Fold02\n#>  3 <split [408/48]> Fold03\n#>  4 <split [409/47]> Fold04\n#>  5 <split [411/45]> Fold05\n#>  6 <split [412/44]> Fold06\n#>  7 <split [412/44]> Fold07\n#>  8 <split [412/44]> Fold08\n#>  9 <split [412/44]> Fold09\n#> 10 <split [412/44]> Fold10\n\n\nStratification often helps, with very little downside"
  },
  {
    "objectID": "slides/04-evaluating-models.html#resampling-5",
    "href": "slides/04-evaluating-models.html#resampling-5",
    "title": "4 - Evaluating models",
    "section": "Resampling ",
    "text": "Resampling \n\nbootstraps(frog_train, times = 10)\n#> # Bootstrap sampling \n#> # A tibble: 10 × 2\n#>    splits            id         \n#>    <list>            <chr>      \n#>  1 <split [456/162]> Bootstrap01\n#>  2 <split [456/165]> Bootstrap02\n#>  3 <split [456/159]> Bootstrap03\n#>  4 <split [456/169]> Bootstrap04\n#>  5 <split [456/168]> Bootstrap05\n#>  6 <split [456/171]> Bootstrap06\n#>  7 <split [456/175]> Bootstrap07\n#>  8 <split [456/168]> Bootstrap08\n#>  9 <split [456/166]> Bootstrap09\n#> 10 <split [456/156]> Bootstrap10"
  },
  {
    "objectID": "slides/04-evaluating-models.html#resampling-6",
    "href": "slides/04-evaluating-models.html#resampling-6",
    "title": "4 - Evaluating models",
    "section": "Resampling ",
    "text": "Resampling \n\nvalidation_split(frog_train, strata = latency)\n#> # Validation Set Split (0.75/0.25)  using stratification \n#> # A tibble: 1 × 2\n#>   splits            id        \n#>   <list>            <chr>     \n#> 1 <split [340/116]> validation\n\n\nA validation split is just another type of resample"
  },
  {
    "objectID": "slides/04-evaluating-models.html#evaluating-model-performance",
    "href": "slides/04-evaluating-models.html#evaluating-model-performance",
    "title": "4 - Evaluating models",
    "section": "Evaluating model performance ",
    "text": "Evaluating model performance \n\nset.seed(123)\nfrog_folds <- vfold_cv(frog_train, v = 10, strata = latency)\nfrog_folds\n#> #  10-fold cross-validation using stratification \n#> # A tibble: 10 × 2\n#>    splits           id    \n#>    <list>           <chr> \n#>  1 <split [408/48]> Fold01\n#>  2 <split [408/48]> Fold02\n#>  3 <split [408/48]> Fold03\n#>  4 <split [409/47]> Fold04\n#>  5 <split [411/45]> Fold05\n#>  6 <split [412/44]> Fold06\n#>  7 <split [412/44]> Fold07\n#>  8 <split [412/44]> Fold08\n#>  9 <split [412/44]> Fold09\n#> 10 <split [412/44]> Fold10\n\n\nSet the seed when creating resamples"
  },
  {
    "objectID": "slides/04-evaluating-models.html#evaluating-model-performance-1",
    "href": "slides/04-evaluating-models.html#evaluating-model-performance-1",
    "title": "4 - Evaluating models",
    "section": "Evaluating model performance ",
    "text": "Evaluating model performance \n\nfit_resamples(tree_wflow, frog_folds)\n#> # Resampling results\n#> # 10-fold cross-validation using stratification \n#> # A tibble: 10 × 4\n#>    splits           id     .metrics         .notes          \n#>    <list>           <chr>  <list>           <list>          \n#>  1 <split [408/48]> Fold01 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  2 <split [408/48]> Fold02 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  3 <split [408/48]> Fold03 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  4 <split [409/47]> Fold04 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  5 <split [411/45]> Fold05 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  6 <split [412/44]> Fold06 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  7 <split [412/44]> Fold07 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  8 <split [412/44]> Fold08 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  9 <split [412/44]> Fold09 <tibble [2 × 4]> <tibble [0 × 3]>\n#> 10 <split [412/44]> Fold10 <tibble [2 × 4]> <tibble [0 × 3]>\n\n\nWhere are the fitted models??!??"
  },
  {
    "objectID": "slides/04-evaluating-models.html#evaluating-model-performance-2",
    "href": "slides/04-evaluating-models.html#evaluating-model-performance-2",
    "title": "4 - Evaluating models",
    "section": "Evaluating model performance ",
    "text": "Evaluating model performance \n\nfit_resamples(tree_wflow, frog_folds)\n#> # Resampling results\n#> # 10-fold cross-validation using stratification \n#> # A tibble: 10 × 4\n#>    splits           id     .metrics         .notes          \n#>    <list>           <chr>  <list>           <list>          \n#>  1 <split [408/48]> Fold01 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  2 <split [408/48]> Fold02 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  3 <split [408/48]> Fold03 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  4 <split [409/47]> Fold04 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  5 <split [411/45]> Fold05 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  6 <split [412/44]> Fold06 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  7 <split [412/44]> Fold07 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  8 <split [412/44]> Fold08 <tibble [2 × 4]> <tibble [0 × 3]>\n#>  9 <split [412/44]> Fold09 <tibble [2 × 4]> <tibble [0 × 3]>\n#> 10 <split [412/44]> Fold10 <tibble [2 × 4]> <tibble [0 × 3]>\n\nWhere are the fitted models??!?? 🗑️\n\nFor more advanced use cases, you can extract and save them: https://www.tmwr.org/resampling.html#extract"
  },
  {
    "objectID": "slides/04-evaluating-models.html#evaluating-model-performance-3",
    "href": "slides/04-evaluating-models.html#evaluating-model-performance-3",
    "title": "4 - Evaluating models",
    "section": "Evaluating model performance ",
    "text": "Evaluating model performance \n\nfit_resamples(tree_wflow, frog_folds) %>%\n  collect_metrics()\n#> # A tibble: 2 × 6\n#>   .metric .estimator   mean     n std_err .config             \n#>   <chr>   <chr>       <dbl> <int>   <dbl> <chr>               \n#> 1 rmse    standard   59.6      10  2.31   Preprocessor1_Model1\n#> 2 rsq     standard    0.305    10  0.0342 Preprocessor1_Model1\n\n\nWe can reliably measure performance using only the training data 🎉"
  },
  {
    "objectID": "slides/04-evaluating-models.html#embarrassingly-parallel",
    "href": "slides/04-evaluating-models.html#embarrassingly-parallel",
    "title": "4 - Evaluating models",
    "section": "Embarrassingly parallel ",
    "text": "Embarrassingly parallel \n\ndoParallel::registerDoParallel()\n\n# Save the assessment set results\nctrl_frog <- control_resamples(save_pred = TRUE)\n\nset.seed(1)\ntree_res <- fit_resamples(tree_wflow, frog_folds, control = ctrl_frog)\n\ntree_res %>% collect_metrics()\n#> # A tibble: 2 × 6\n#>   .metric .estimator   mean     n std_err .config             \n#>   <chr>   <chr>       <dbl> <int>   <dbl> <chr>               \n#> 1 rmse    standard   59.6      10  2.31   Preprocessor1_Model1\n#> 2 rsq     standard    0.305    10  0.0342 Preprocessor1_Model1\n\n\nEach fit is independent of the others"
  },
  {
    "objectID": "slides/04-evaluating-models.html#comparing-metrics",
    "href": "slides/04-evaluating-models.html#comparing-metrics",
    "title": "4 - Evaluating models",
    "section": "Comparing metrics ",
    "text": "Comparing metrics \nHow do the metrics from resampling compare to the metrics from training and testing?\n\n\n\n\n\n\ntree_res %>%\n  collect_metrics() %>% \n  select(.metric, mean, n)\n#> # A tibble: 2 × 3\n#>   .metric   mean     n\n#>   <chr>    <dbl> <int>\n#> 1 rmse    59.6      10\n#> 2 rsq      0.305    10\n\n\nThe RMSE previously was\n\n49.36 for the training set\n59.16 for test set\n\n\n\n\nRemember that:\n⚠️ the training set gives you overly optimistic metrics\n⚠️ the test set is precious"
  },
  {
    "objectID": "slides/04-evaluating-models.html#evaluating-model-performance-4",
    "href": "slides/04-evaluating-models.html#evaluating-model-performance-4",
    "title": "4 - Evaluating models",
    "section": "Evaluating model performance ",
    "text": "Evaluating model performance \n\nctrl_frog <- control_resamples(save_pred = TRUE)\n\ntree_preds <- \n  tree_res %>%\n  collect_predictions()\n\ntree_preds\n#> # A tibble: 456 × 5\n#>    id     .pred  .row latency .config             \n#>    <chr>  <dbl> <int>   <dbl> <chr>               \n#>  1 Fold01  39.6     1      33 Preprocessor1_Model1\n#>  2 Fold01  72.1     3       2 Preprocessor1_Model1\n#>  3 Fold01  63.8     9      30 Preprocessor1_Model1\n#>  4 Fold01  72.1    13      46 Preprocessor1_Model1\n#>  5 Fold01  43.3    28      11 Preprocessor1_Model1\n#>  6 Fold01  61.7    35      41 Preprocessor1_Model1\n#>  7 Fold01  39.6    51      43 Preprocessor1_Model1\n#>  8 Fold01 134.     70      20 Preprocessor1_Model1\n#>  9 Fold01  70.6    74      21 Preprocessor1_Model1\n#> 10 Fold01  39.6   106      14 Preprocessor1_Model1\n#> # … with 446 more rows"
  },
  {
    "objectID": "slides/04-evaluating-models.html#section-4",
    "href": "slides/04-evaluating-models.html#section-4",
    "title": "4 - Evaluating models",
    "section": "",
    "text": "tree_preds %>% \n  ggplot(aes(latency, .pred, color = id)) + \n  geom_abline(lty = 2, col = \"gray\", size = 1.5) +\n  geom_point(alpha = 0.5) +\n  coord_obs_pred()"
  },
  {
    "objectID": "slides/04-evaluating-models.html#create-a-random-forest-model",
    "href": "slides/04-evaluating-models.html#create-a-random-forest-model",
    "title": "4 - Evaluating models",
    "section": "Create a random forest model ",
    "text": "Create a random forest model \n\nrf_spec <- rand_forest(trees = 1000, mode = \"regression\")\nrf_spec\n#> Random Forest Model Specification (regression)\n#> \n#> Main Arguments:\n#>   trees = 1000\n#> \n#> Computational engine: ranger"
  },
  {
    "objectID": "slides/04-evaluating-models.html#create-a-random-forest-model-1",
    "href": "slides/04-evaluating-models.html#create-a-random-forest-model-1",
    "title": "4 - Evaluating models",
    "section": "Create a random forest model ",
    "text": "Create a random forest model \n\nrf_wflow <- workflow(latency ~ ., rf_spec)\nrf_wflow\n#> ══ Workflow ══════════════════════════════════════════════════════════\n#> Preprocessor: Formula\n#> Model: rand_forest()\n#> \n#> ── Preprocessor ──────────────────────────────────────────────────────\n#> latency ~ .\n#> \n#> ── Model ─────────────────────────────────────────────────────────────\n#> Random Forest Model Specification (regression)\n#> \n#> Main Arguments:\n#>   trees = 1000\n#> \n#> Computational engine: ranger"
  },
  {
    "objectID": "slides/04-evaluating-models.html#your-turn-3",
    "href": "slides/04-evaluating-models.html#your-turn-3",
    "title": "4 - Evaluating models",
    "section": "Your turn",
    "text": "Your turn\n\nUse fit_resamples() and rf_wflow to:\n\nkeep predictions\ncompute metrics\nplot true vs. predicted values\n\n\n\n\n05:00"
  },
  {
    "objectID": "slides/04-evaluating-models.html#evaluating-model-performance-5",
    "href": "slides/04-evaluating-models.html#evaluating-model-performance-5",
    "title": "4 - Evaluating models",
    "section": "Evaluating model performance ",
    "text": "Evaluating model performance \n\nctrl_frog <- control_resamples(save_pred = TRUE)\n\n# Random forest uses random numbers so set the seed first\n\nset.seed(2)\nrf_res <- fit_resamples(rf_wflow, frog_folds, control = ctrl_frog)\ncollect_metrics(rf_res)\n#> # A tibble: 2 × 6\n#>   .metric .estimator   mean     n std_err .config             \n#>   <chr>   <chr>       <dbl> <int>   <dbl> <chr>               \n#> 1 rmse    standard   55.9      10  1.71   Preprocessor1_Model1\n#> 2 rsq     standard    0.370    10  0.0306 Preprocessor1_Model1"
  },
  {
    "objectID": "slides/04-evaluating-models.html#section-5",
    "href": "slides/04-evaluating-models.html#section-5",
    "title": "4 - Evaluating models",
    "section": "",
    "text": "collect_predictions(rf_res) %>% \n  ggplot(aes(latency, .pred, color = id)) + \n  geom_abline(lty = 2, col = \"gray\", size = 1.5) +\n  geom_point(alpha = 0.5) +\n  coord_obs_pred()"
  },
  {
    "objectID": "slides/04-evaluating-models.html#how-can-we-compare-multiple-model-workflows-at-once",
    "href": "slides/04-evaluating-models.html#how-can-we-compare-multiple-model-workflows-at-once",
    "title": "4 - Evaluating models",
    "section": "How can we compare multiple model workflows at once?",
    "text": "How can we compare multiple model workflows at once?"
  },
  {
    "objectID": "slides/04-evaluating-models.html#evaluate-a-workflow-set",
    "href": "slides/04-evaluating-models.html#evaluate-a-workflow-set",
    "title": "4 - Evaluating models",
    "section": "Evaluate a workflow set",
    "text": "Evaluate a workflow set\n\nworkflow_set(list(latency ~ .), list(tree_spec, rf_spec))\n#> # A workflow set/tibble: 2 × 4\n#>   wflow_id              info             option    result    \n#>   <chr>                 <list>           <list>    <list>    \n#> 1 formula_decision_tree <tibble [1 × 4]> <opts[0]> <list [0]>\n#> 2 formula_rand_forest   <tibble [1 × 4]> <opts[0]> <list [0]>"
  },
  {
    "objectID": "slides/04-evaluating-models.html#evaluate-a-workflow-set-1",
    "href": "slides/04-evaluating-models.html#evaluate-a-workflow-set-1",
    "title": "4 - Evaluating models",
    "section": "Evaluate a workflow set",
    "text": "Evaluate a workflow set\n\nworkflow_set(list(latency ~ .), list(tree_spec, rf_spec)) %>%\n  workflow_map(\"fit_resamples\", resamples = frog_folds)\n#> # A workflow set/tibble: 2 × 4\n#>   wflow_id              info             option    result   \n#>   <chr>                 <list>           <list>    <list>   \n#> 1 formula_decision_tree <tibble [1 × 4]> <opts[1]> <rsmp[+]>\n#> 2 formula_rand_forest   <tibble [1 × 4]> <opts[1]> <rsmp[+]>"
  },
  {
    "objectID": "slides/04-evaluating-models.html#evaluate-a-workflow-set-2",
    "href": "slides/04-evaluating-models.html#evaluate-a-workflow-set-2",
    "title": "4 - Evaluating models",
    "section": "Evaluate a workflow set",
    "text": "Evaluate a workflow set\n\nworkflow_set(list(latency ~ .), list(tree_spec, rf_spec)) %>%\n  workflow_map(\"fit_resamples\", resamples = frog_folds) %>%\n  rank_results()\n#> # A tibble: 4 × 9\n#>   wflow_id         .config .metric   mean std_err     n preprocessor model  rank\n#>   <chr>            <chr>   <chr>    <dbl>   <dbl> <int> <chr>        <chr> <int>\n#> 1 formula_rand_fo… Prepro… rmse    55.8    1.67      10 formula      rand…     1\n#> 2 formula_rand_fo… Prepro… rsq      0.371  0.0304    10 formula      rand…     1\n#> 3 formula_decisio… Prepro… rmse    59.6    2.31      10 formula      deci…     2\n#> 4 formula_decisio… Prepro… rsq      0.305  0.0342    10 formula      deci…     2\n\n\nLots more available with workflow sets, like collect_metrics(), autoplot() methods, and more!"
  },
  {
    "objectID": "slides/04-evaluating-models.html#your-turn-4",
    "href": "slides/04-evaluating-models.html#your-turn-4",
    "title": "4 - Evaluating models",
    "section": "Your turn",
    "text": "Your turn\n\nWhen do you think a workflow set would be useful?\n\n\n\n03:00"
  },
  {
    "objectID": "slides/04-evaluating-models.html#the-final-fit",
    "href": "slides/04-evaluating-models.html#the-final-fit",
    "title": "4 - Evaluating models",
    "section": "The final fit ",
    "text": "The final fit \nSuppose that we are happy with our random forest model.\nLet’s verify our performance using the test set.\nWe’ve shown you fit() and predict() (+ augment()) but there is a shortcut:\n\n# frog_split has train + test info\nfinal_fit <- last_fit(rf_wflow, frog_split) \n\nfinal_fit\n#> # Resampling results\n#> # Manual resampling \n#> # A tibble: 1 × 6\n#>   splits            id               .metrics .notes   .predictions .workflow \n#>   <list>            <chr>            <list>   <list>   <list>       <list>    \n#> 1 <split [456/116]> train/test split <tibble> <tibble> <tibble>     <workflow>"
  },
  {
    "objectID": "slides/04-evaluating-models.html#what-is-in-final_fit",
    "href": "slides/04-evaluating-models.html#what-is-in-final_fit",
    "title": "4 - Evaluating models",
    "section": "What is in final_fit? ",
    "text": "What is in final_fit? \n\ncollect_metrics(final_fit)\n#> # A tibble: 2 × 4\n#>   .metric .estimator .estimate .config             \n#>   <chr>   <chr>          <dbl> <chr>               \n#> 1 rmse    standard      57.1   Preprocessor1_Model1\n#> 2 rsq     standard       0.420 Preprocessor1_Model1\n\n\nThese are metrics computed with the test set"
  },
  {
    "objectID": "slides/04-evaluating-models.html#what-is-in-final_fit-1",
    "href": "slides/04-evaluating-models.html#what-is-in-final_fit-1",
    "title": "4 - Evaluating models",
    "section": "What is in final_fit? ",
    "text": "What is in final_fit? \n\ncollect_predictions(final_fit)\n#> # A tibble: 116 × 5\n#>    id               .pred  .row latency .config             \n#>    <chr>            <dbl> <int>   <dbl> <chr>               \n#>  1 train/test split  43.3     1      22 Preprocessor1_Model1\n#>  2 train/test split 103.      3     106 Preprocessor1_Model1\n#>  3 train/test split  76.6     6      39 Preprocessor1_Model1\n#>  4 train/test split  43.0     8      50 Preprocessor1_Model1\n#>  5 train/test split  43.0    10      63 Preprocessor1_Model1\n#>  6 train/test split  42.8    14      25 Preprocessor1_Model1\n#>  7 train/test split  51.1    16      48 Preprocessor1_Model1\n#>  8 train/test split 163.     17      91 Preprocessor1_Model1\n#>  9 train/test split  50.7    32      11 Preprocessor1_Model1\n#> 10 train/test split 171.     33     109 Preprocessor1_Model1\n#> # … with 106 more rows\n\n\nThese are predictions for the test set"
  },
  {
    "objectID": "slides/04-evaluating-models.html#section-6",
    "href": "slides/04-evaluating-models.html#section-6",
    "title": "4 - Evaluating models",
    "section": "",
    "text": "collect_predictions(final_fit) %>%\n  ggplot(aes(latency, .pred)) + \n  geom_abline(lty = 2, col = \"deeppink4\", size = 1.5) +\n  geom_point(alpha = 0.5) +\n  coord_obs_pred()"
  },
  {
    "objectID": "slides/04-evaluating-models.html#what-is-in-final_fit-2",
    "href": "slides/04-evaluating-models.html#what-is-in-final_fit-2",
    "title": "4 - Evaluating models",
    "section": "What is in final_fit? ",
    "text": "What is in final_fit? \n\nextract_workflow(final_fit)\n#> ══ Workflow [trained] ════════════════════════════════════════════════\n#> Preprocessor: Formula\n#> Model: rand_forest()\n#> \n#> ── Preprocessor ──────────────────────────────────────────────────────\n#> latency ~ .\n#> \n#> ── Model ─────────────────────────────────────────────────────────────\n#> Ranger result\n#> \n#> Call:\n#>  ranger::ranger(x = maybe_data_frame(x), y = y, num.trees = ~1000,      num.threads = 1, verbose = FALSE, seed = sample.int(10^5,          1)) \n#> \n#> Type:                             Regression \n#> Number of trees:                  1000 \n#> Sample size:                      456 \n#> Number of independent variables:  4 \n#> Mtry:                             2 \n#> Target node size:                 5 \n#> Variable importance mode:         none \n#> Splitrule:                        variance \n#> OOB prediction error (MSE):       3128.496 \n#> R squared (OOB):                  0.3523713\n\n\nUse this for prediction on new data, like for deploying"
  },
  {
    "objectID": "slides/04-evaluating-models.html#your-turn-5",
    "href": "slides/04-evaluating-models.html#your-turn-5",
    "title": "4 - Evaluating models",
    "section": "Your turn",
    "text": "Your turn\n\nEnd of the day discussion!\nWhich model do you think you would decide to use?\nWhat surprised you the most?\nWhat is one thing you are looking forward to for tomorrow?\n\n\n\n05:00\n\n\n\n\n\nhttps://workshops.tidymodels.org"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#all-models-are-wrong-but-3",
    "href": "slides/03-what-makes-a-model.html#all-models-are-wrong-but-3",
    "title": "3 - What makes a model?",
    "section": "All models are wrong but…",
    "text": "All models are wrong but…"
  },
  {
    "objectID": "slides/03-what-makes-a-model.html#all-models-are-wrong-but-4",
    "href": "slides/03-what-makes-a-model.html#all-models-are-wrong-but-4",
    "title": "3 - What makes a model?",
    "section": "All models are wrong but…",
    "text": "All models are wrong but…\n\n\n\n\n\n\n\n\nDecision tree model\n\nSeries of splits or if/then statements based on predictors\nFirst the tree grows until some condition is met (maximum depth, no more data)\nThen the tree is pruned to reduce its complexity"
  },
  {
    "objectID": "slides/04-evaluating-models.html#random-forest-1",
    "href": "slides/04-evaluating-models.html#random-forest-1",
    "title": "4 - Evaluating models",
    "section": "Random forest 🌳🌲🌴🌵🌴🌳🌳🌴🌲🌵🌴🌲🌳🌴🌳🌵🌵",
    "text": "Random forest 🌳🌲🌴🌵🌴🌳🌳🌴🌲🌵🌴🌲🌳🌴🌳🌵🌵\n\nEnsemble many decision tree models\nAll the trees vote! 🗳️\nBootstrap aggregating + random feature selection\n\n\n\nOften works well without tuning hyperparameters (more on this tomorrow!), as long as there are enough trees"
  }
]