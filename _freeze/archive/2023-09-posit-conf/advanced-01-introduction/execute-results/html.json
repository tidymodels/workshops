{
  "hash": "870a4d9b875946a160b375694ea1290f",
  "result": {
    "markdown": "---\ntitle: \"1 - Introduction\"\nsubtitle: \"Advanced tidymodels\"\nformat:\n  revealjs: \n    slide-number: true\n    footer: <https://workshops.tidymodels.org>\n    include-before-body: header.html\n    include-after-body: footer-annotations.html\n    theme: [default, tidymodels.scss]\n    width: 1280\n    height: 720\nknitr:\n  opts_chunk: \n    echo: true\n    collapse: true\n    comment: \"#>\"\n---\n\n\n\n\n::: r-fit-text\nWelcome!\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n\n<center>\n\n### <i class=\"fa fa-wifi\"></i>\n\nWi-Fi network name\n\n`Posit Conf 2023`\n\n</center>\n\n:::\n\n::: {.column width=\"50%\"}\n\n<center>\n\n### <i class=\"fa fa-key\"></i>\n\nWi-Fi password\n\n`conf2023`\n\n</center>\n\n:::\n:::\n\n## Workshop policies\n\n-   Please do not photograph people wearing red lanyards\n\n-   There are gender-neutral bathrooms located are among the Grand Suite Bathrooms\n\n-   There are two meditation/prayer rooms: Grand Suite 2A and 2B\n\n-   A lactation room is located in Grand Suite 1\n\n-   The meditation/prayer and lactation rooms are open  \n    Sun - Tue 7:30am - 7:00pm, Wed 8:00am - 6:00pm\n\n## Workshop policies\n\n-   Please review the code of conduct and COVID policies, which apply to all workshops: <https://posit.co/code-of-conduct/.>\n\n-   CoC site has info on how to report a problem (in person, email, phone)\n\n## Who are you?\n\n-   You can use the magrittr `%>%` or base R `|>` pipe\n\n-   You are familiar with functions from dplyr, tidyr, ggplot2\n\n-   You have exposure to basic statistical concepts\n\n-   You do **not** need intermediate or expert familiarity with modeling or ML\n\n-   You have used some tidymodels packages\n \n-   You have some experience with evaluating statistical models using resampling techniques \n\n## Who are tidymodels?\n\n-   Simon Couch\n-   Hannah Frick\n-   Emil Hvitfeldt\n-   Max Kuhn\n\n. . .\n\nIjeamaka Anyene (Day 1) and Edgar Ruiz (Day 2) are TAing!\n\n. . .\n\nMany thanks to Davis Vaughan, Julia Silge, David Robinson, Julie Jung, Alison Hill, and DesirÃ©e De Leon for their role in creating these materials!\n\n## Asking for help\n\n. . .\n\nðŸŸª \"I'm stuck and need help!\"\n\n. . .\n\nðŸŸ© \"I finished the exercise\"\n\n\n## ðŸ‘€ {.annotation}\n\n![](images/pointing.svg){.absolute top=\"0\" right=\"0\"}\n\n## Tentative plan for this workshop\n\n- Feature engineering with recipes\n- Model optimization by tuning\n  - Grid search\n  - Racing\n  - Iterative methods\n- Extras (time permitting)\n  - Effect encodings\n  - A case study\n\n##  {.center}\n\n### Introduce yourself to your neighbors ðŸ‘‹\n\n<br></br>\n\n### <i class=\"fa fa-cloud\"></i> Log in to Posit Cloud (free):\n\nCheck the workshop channel on Discord for the link!\n\n## Let's install some packages\n\nIf you are using your own laptop instead of RStudio Cloud:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install the packages for the workshop\npkgs <- \n  c(\"bonsai\", \"doParallel\", \"embed\", \"finetune\", \"lightgbm\", \"lme4\",\n    \"plumber\", \"probably\", \"ranger\", \"rpart\", \"rpart.plot\", \"rules\",\n    \"splines2\", \"stacks\", \"text2vec\", \"textrecipes\", \"tidymodels\", \n    \"vetiver\", \"remotes\")\n\ninstall.packages(pkgs)\n```\n:::\n\n\n. . .\n\n<br></br>\n\n### <i class=\"fa fa-cloud\"></i> Or log in to Posit Cloud\n\nLink in our Discord channel!\n\n## Hotel Data ![](hexes/tidymodels.png){.absolute top=-20 right=0 width=\"64\" height=\"74.24\"} ![](hexes/dplyr.png){.absolute top=-20 right=64 width=\"64\" height=\"74.24\"}\n\nWe'll use [data on hotels](https://www.sciencedirect.com/science/article/pii/S2352340918315191) to predict the cost of a room. \n\nThe [data](https://modeldata.tidymodels.org/reference/hotel_rates.html) are in the modeldata package. We'll sample down the data and refactor some columns: \n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n\n# Max's usual settings: \ntidymodels_prefer()\ntheme_set(theme_bw())\noptions(\n  pillar.advice = FALSE, \n  pillar.min_title_chars = Inf\n)\n```\n:::\n\n\n:::\n\n::: {.column width=\"60%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(hotel_rates)\nset.seed(295)\nhotel_rates <- \n  hotel_rates %>% \n  sample_n(5000) %>% \n  arrange(arrival_date) %>% \n  select(-arrival_date) %>% \n  mutate(\n    company = factor(as.character(company)),\n    country = factor(as.character(country)),\n    agent = factor(as.character(agent))\n  )\n```\n:::\n\n\n\n:::\n\n::::\n\n## Hotel date columns\n\n\n::: {.cell labels='hotel-names'}\n\n```{.r .cell-code}\nnames(hotel_rates)\n#>  [1] \"avg_price_per_room\"             \"lead_time\"                     \n#>  [3] \"stays_in_weekend_nights\"        \"stays_in_week_nights\"          \n#>  [5] \"adults\"                         \"children\"                      \n#>  [7] \"babies\"                         \"meal\"                          \n#>  [9] \"country\"                        \"market_segment\"                \n#> [11] \"distribution_channel\"           \"is_repeated_guest\"             \n#> [13] \"previous_cancellations\"         \"previous_bookings_not_canceled\"\n#> [15] \"reserved_room_type\"             \"assigned_room_type\"            \n#> [17] \"booking_changes\"                \"agent\"                         \n#> [19] \"company\"                        \"days_in_waiting_list\"          \n#> [21] \"customer_type\"                  \"required_car_parking_spaces\"   \n#> [23] \"total_of_special_requests\"      \"arrival_date_num\"              \n#> [25] \"near_christmas\"                 \"near_new_years\"                \n#> [27] \"historical_adr\"\n```\n:::\n\n\n\n## Data splitting strategy\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/initial-split.svg){fig-align='center' width=20%}\n:::\n:::\n\n\n\n## Data Spending ![](hexes/rsample.png){.absolute top=-20 right=0 width=\"64\" height=\"74.24\"}\n\nLet's split the data into a training set (75%) and testing set (25%) using stratification:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(4028)\nhotel_split <- initial_split(hotel_rates, strata = avg_price_per_room)\n\nhotel_train <- training(hotel_split)\nhotel_test <- testing(hotel_split)\n```\n:::\n\n\n\n\n## Your turn {transition=\"slide-in\"}\n\nLet's take some time and investigate the _training data_. The outcome is `avg_price_per_room`. \n\nAre there any interesting characteristics of the data?\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"hotel-investigation\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n## Our versions\n\n\n::: {.cell}\n\n:::\n\n\nR version 4.2.2 (2022-10-31), Quarto (1.4.104)\n\n::: {.columns style=\"font-size:0.7em;\"}\n::: {.column width=\"25%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n|package    |version |\n|:----------|:-------|\n|bonsai     |0.2.1   |\n|broom      |1.0.5   |\n|dials      |1.2.0   |\n|doParallel |1.0.17  |\n|dplyr      |1.1.3   |\n|embed      |1.1.2   |\n|finetune   |1.1.0   |\n|ggplot2    |3.4.3   |\n|lightgbm   |3.3.5   |\n:::\n:::\n\n:::\n\n::: {.column width=\"25%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n|package   |version |\n|:---------|:-------|\n|lme4      |1.1-34  |\n|modeldata |1.2.0   |\n|parsnip   |1.1.1   |\n|plumber   |1.2.1   |\n|probably  |1.0.2   |\n|purrr     |1.0.2   |\n|ranger    |0.15.1  |\n|recipes   |1.0.8   |\n|remotes   |2.4.2.1 |\n:::\n:::\n\n:::\n\n::: {.column width=\"25%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n|package     |version |\n|:-----------|:-------|\n|rpart       |4.1.19  |\n|rpart.plot  |3.1.1   |\n|rsample     |1.2.0   |\n|rules       |1.0.2   |\n|scales      |1.2.1   |\n|splines2    |0.5.1   |\n|stacks      |1.0.2   |\n|text2vec    |0.6.3   |\n|textrecipes |1.0.4   |\n:::\n:::\n\n:::\n\n::: {.column width=\"25%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n|package      |version |\n|:------------|:-------|\n|tibble       |3.2.1   |\n|tidymodels   |1.1.1   |\n|tidyr        |1.3.0   |\n|tune         |1.1.2   |\n|vetiver      |0.2.4   |\n|workflows    |1.1.3   |\n|workflowsets |1.0.1   |\n|yardstick    |1.2.0   |\n:::\n:::\n\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}