{
  "hash": "1a55a1de550fbe727de7a59def25d45d",
  "result": {
    "markdown": "---\ntitle: \"Extras - workflowsets\"\nsubtitle: \"Introduction to tidymodels\"\nformat:\n  revealjs: \n    slide-number: true\n    footer: <https://workshops.tidymodels.org>\n    include-before-body: header.html\n    include-after-body: footer-annotations.html\n    theme: [default, tidymodels.scss]\n    width: 1280\n    height: 720\nknitr:\n  opts_chunk: \n    echo: true\n    collapse: true\n    comment: \"#>\"\n    fig.path: \"figures/\"\n---\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## How can we compare multiple model workflows at once?\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/taxi_spinning.svg){fig-align='center'}\n:::\n:::\n\n\n## Evaluate a workflow set\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworkflow_set(list(tip ~ .), list(tree_spec, rf_spec))\n#> # A workflow set/tibble: 2 × 4\n#>   wflow_id              info             option    result    \n#>   <chr>                 <list>           <list>    <list>    \n#> 1 formula_decision_tree <tibble [1 × 4]> <opts[0]> <list [0]>\n#> 2 formula_rand_forest   <tibble [1 × 4]> <opts[0]> <list [0]>\n```\n:::\n\n\n## Evaluate a workflow set\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworkflow_set(list(tip ~ .), list(tree_spec, rf_spec)) %>%\n  workflow_map(\"fit_resamples\", resamples = taxi_folds)\n#> # A workflow set/tibble: 2 × 4\n#>   wflow_id              info             option    result   \n#>   <chr>                 <list>           <list>    <list>   \n#> 1 formula_decision_tree <tibble [1 × 4]> <opts[1]> <rsmp[+]>\n#> 2 formula_rand_forest   <tibble [1 × 4]> <opts[1]> <rsmp[+]>\n```\n:::\n\n\n## Evaluate a workflow set\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworkflow_set(list(tip ~ .), list(tree_spec, rf_spec)) %>%\n  workflow_map(\"fit_resamples\", resamples = taxi_folds) %>%\n  rank_results()\n#> # A tibble: 4 × 9\n#>   wflow_id          .config .metric  mean std_err     n preprocessor model  rank\n#>   <chr>             <chr>   <chr>   <dbl>   <dbl> <int> <chr>        <chr> <int>\n#> 1 formula_decision… Prepro… accura… 0.915 0.00309    10 formula      deci…     1\n#> 2 formula_decision… Prepro… roc_auc 0.624 0.0105     10 formula      deci…     1\n#> 3 formula_rand_for… Prepro… accura… 0.924 0.00326    10 formula      rand…     2\n#> 4 formula_rand_for… Prepro… roc_auc 0.615 0.0151     10 formula      rand…     2\n```\n:::\n\n\nThe first metric of the metric set is used for ranking. Use `rank_metric` to change that.\n\n. . .\n\nLots more available with workflow sets, like `collect_metrics()`, `autoplot()` methods, and more!\n\n## Your turn {transition=\"slide-in\"}\n\n![](images/parsnip-flagger.jpg){.absolute top=\"0\" right=\"0\" width=\"150\" height=\"150\"}\n\n*When do you think a workflow set would be useful?*\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"discuss-workflow-sets\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}