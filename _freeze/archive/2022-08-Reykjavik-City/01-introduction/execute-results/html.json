{
  "hash": "2340cec9159d263b8196f07a78934fb2",
  "result": {
    "markdown": "---\ntitle: \"1 - Introduction\"\nsubtitle: \"Machine learning with tidymodels\"\nformat:\n  revealjs: \n    slide-number: true\n    footer: <https://workshops.tidymodels.org>\n    include-before-body: header.html\n    include-after-body: footer-annotations.html\n    theme: [default, tidymodels.scss]\n    width: 1280\n    height: 720\nknitr:\n  opts_chunk: \n    echo: true\n    collapse: true\n    comment: \"#>\"\n---\n\n\n\n\n::: r-fit-text\nWelcome!\n:::\n\n## Who are you?\n\n-   You can use the magrittr `%>%` or base R `|>` pipe\n\n-   You are familiar with functions from dplyr, tidyr, ggplot2\n\n-   You have exposure to basic statistical concepts\n\n-   You do **not** need intermediate or expert familiarity with modeling or ML\n\n## Who are tidymodels?\n\n-   Simon Couch\n-   Hannah Frick\n-   Emil Hvitfeldt\n-   Max Kuhn\n\n. . .\n\nMany thanks to Davis Vaughan, Julia Silge, David Robinson, Julie Jung, Alison Hill, and Desir√©e De Leon for their role in creating these materials!\n\n## Asking for help\n\n. . .\n\nüü™ \"I'm stuck and need help!\"\n\n. . .\n\nüü© \"I finished the exercise\"\n\n\n## üëÄ {.annotation}\n\n![](images/pointing.svg){.absolute top=\"0\" right=\"0\"}\n\n## Tentative plan for this workshop\n\n-   *Today:* \n\n    - Your data budget\n    - What makes a model\n    - Evaluating models\n\n-   *Tomorrow:*\n    \n    - Feature engineering\n    - Tuning hyperparameters\n    - Transportation case study\n    - Wrapping up!\n\n##  {.center}\n\n### Introduce yourself to your neighbors üëã\n\n<br></br>\n\n### <i class=\"fa fa-cloud\"></i> Log in to RStudio Cloud here (free):\n\n[bit.ly/tidymodels-iceland-2022](https://bit.ly/tidymodels-iceland-2022)\n\n## What is machine learning?\n\n![](https://imgs.xkcd.com/comics/machine_learning.png){fig-align=\"center\"}\n\n::: footer\n<https://xkcd.com/1838/>\n:::\n\n## What is machine learning?\n\n![](images/what_is_ml.jpg){fig-align=\"center\"}\n\n::: footer\nIllustration credit: <https://vas3k.com/blog/machine_learning/>\n:::\n\n## What is machine learning?\n\n![](images/ml_illustration.jpg){fig-align=\"center\"}\n\n::: footer\nIllustration credit: <https://vas3k.com/blog/machine_learning/>\n:::\n\n## Your turn {transition=\"slide-in\"}\n\n![](images/parsnip-flagger.jpg){.absolute top=\"0\" right=\"0\" width=\"150\" height=\"150\"}\n\n. . .\n\n*How are statistics and machine learning related?*\n\n*How are they similar? Different?*\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"statistics-vs-ml\" style=\"right:0;bottom:0;\" data-warnwhen=\"0\">\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n::: notes\nthe \"two cultures\"\n\nmodel first vs. data first\n\ninference vs. prediction\n:::\n\n## What is tidymodels? ![](hexes/tidymodels.png){.absolute top=-20 right=0 width=\"64\" height=\"74.24\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n#> ‚îÄ‚îÄ Attaching packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidymodels 1.1.0 ‚îÄ‚îÄ\n#> ‚úî broom        1.0.5     ‚úî rsample      1.1.1\n#> ‚úî dials        1.2.0     ‚úî tibble       3.2.1\n#> ‚úî dplyr        1.1.2     ‚úî tidyr        1.3.0\n#> ‚úî infer        1.0.4     ‚úî tune         1.1.1\n#> ‚úî modeldata    1.1.0     ‚úî workflows    1.1.3\n#> ‚úî parsnip      1.1.0     ‚úî workflowsets 1.0.1\n#> ‚úî purrr        1.0.1     ‚úî yardstick    1.2.0\n#> ‚úî recipes      1.0.6\n#> ‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidymodels_conflicts() ‚îÄ‚îÄ\n#> ‚úñ purrr::discard() masks scales::discard()\n#> ‚úñ dplyr::filter()  masks stats::filter()\n#> ‚úñ dplyr::lag()     masks stats::lag()\n#> ‚úñ recipes::step()  masks stats::step()\n#> ‚Ä¢ Learn how to get started at https://www.tidymodels.org/start/\n```\n:::\n\n\n##  {background-image=\"images/tm-org.png\" background-size=\"contain\"}\n\n## The whole game\n\n- Tomorrow we will walk through a case study in detail to illustrate feature engineering and model tuning. \n\n- Today we will walk through the analysis at a higher level to show the model development process as a whole and give you an introduction to the data set.\n\n- The data are from the NHL where we want to predict whether a shot was on-goal or not! üèí\n\n- It‚Äôs a good example to show how model development works. \n\n## Shots on goal\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-introduction_files/figure-revealjs/rink-shots-1.svg){fig-align='center' width=90%}\n:::\n:::\n\n\n\n## Data spending\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/whole-game-split.svg){fig-align='center'}\n:::\n:::\n\n\n## A first model\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/whole-game-logistic.svg){fig-align='center'}\n:::\n:::\n\n\n## Starting point: logistic regression\n\n- We'll start by using basic logistic regression to predict our binary outcome. \n\n- Our first model will have 12 simple predictor columns. \n\n- One initial question: there are 632 players taking shots. \n\n- For logistic regression, do we convert these to binary indicators (a.k.a. \"dummies\")? \n\n\n\n## Basic features (inc dummy variables)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-introduction_files/figure-revealjs/basic-features-1.svg){fig-align='center' width=70%}\n:::\n:::\n\n\n\n## Different player encoding\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-introduction_files/figure-revealjs/player-encoding-1.svg){fig-align='center' width=70%}\n:::\n:::\n\n\n## What about location\n\nThe previous models used the x/y coordinates. \n\nAre there better ways to represent shot location? \n\nHow can we make location more usable for the model? \n\n\n## Add shot angle? \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-introduction_files/figure-revealjs/shot-angle-1.svg){fig-align='center' width=70%}\n:::\n:::\n\n\n## Add shot from defensive zone? \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-introduction_files/figure-revealjs/shot-dist-1.svg){fig-align='center' width=70%}\n:::\n:::\n\n\n## Add shot behind goal line? \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-introduction_files/figure-revealjs/shot-behind-goal-1.svg){fig-align='center' width=70%}\n:::\n:::\n\n\n\n## Nonlinear terms for angle and distance \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-introduction_files/figure-revealjs/splines-1.svg){fig-align='center' width=70%}\n:::\n:::\n\n\n\n## Try another model\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/whole-game-boost.svg){fig-align='center'}\n:::\n:::\n\n\n\n## Switch to boosting and basic features\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-introduction_files/figure-revealjs/xgboost-model-1.svg){fig-align='center' width=70%}\n:::\n:::\n\n\n\n## Boosting with location features\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](01-introduction_files/figure-revealjs/xgboost-coord-model-1.svg){fig-align='center' width=70%}\n:::\n:::\n\n\n\n\n## Choose wisely...\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/whole-game-select.svg){fig-align='center'}\n:::\n:::\n\n\n\n## Finalize and verify {.annotation}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/whole-game-final.svg){fig-align='center'}\n:::\n:::\n\n\n\n## ... and so on\n\nOnce we find an acceptable model and feature set, the process is to \n\n * Confirm our results on the test set. \n * Document the data and model development process. \n * Deploy, monitor, etc. \n \n\n## Let's install some packages\n\nIf you are using your own laptop instead of RStudio Cloud:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\"Cubist\", \"DALEXtra\", \"doParallel\", \"earth\", \"embed\", \n                   \"forcats\", \"lme4\", \"parallelly\", \"ranger\", \"remotes\", \"rpart\", \n                   \"rpart.plot\", \"rules\", \"stacks\", \"tidymodels\",\n                   \"vetiver\", \"xgboost\"))\n\nremotes::install_github(\"topepo/ongoal@hockeyR\")\n```\n:::\n\n\n. . .\n\n<br></br>\n\n### <i class=\"fa fa-cloud\"></i> Or log in to RStudio Cloud:\n\n[bit.ly/tidymodels-iceland-2022](http://bit.ly/tidymodels-iceland-2022)\n\n\n## Our versions\n\n\n::: {.cell}\n\n:::\n\n\nbroom (1.0.5, CRAN), DALEX (2.4.3, CRAN), DALEXtra (2.2.1, CRAN), dials (1.2.0, CRAN), doParallel (1.0.17, CRAN), dplyr (1.1.2, CRAN), embed (1.1.1, CRAN), ggplot2 (3.4.2, CRAN (R 4.2.1)), modeldata (1.1.0, CRAN), ongoal (0.0.4, Github (topepo/ongoal@2532b2404), parsnip (1.1.0, CRAN), purrr (1.0.1, CRAN), ranger (0.15.1, CRAN), recipes (1.0.6, CRAN), rpart (4.1.16, CRAN (R 4.2.1)), rpart.plot (3.1.1, CRAN), rsample (1.1.1, CRAN), scales (1.2.1, CRAN), stacks (1.0.2, CRAN), tibble (3.2.1, CRAN (R 4.2.1)), tidymodels (1.1.0, CRAN), tidyr (1.3.0, CRAN), tune (1.1.1, CRAN), vetiver (0.2.1, CRAN), workflows (1.1.3, CRAN), workflowsets (1.0.1, CRAN), xgboost (1.7.5.1, CRAN), and yardstick (1.2.0, CRAN)\n\nQuarto: 1.3.433\n",
    "supporting": [
      "01-introduction_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.3.5/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.3.5/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}